- name: Create kubeconfig directory
  file:
    path: '{{ CONF_DIR }}'
    state: directory

- name: Configure kubeconf files for Kubelet
  shell: |
    kubectl config set-cluster {{ CLUSTER_NAME }} \
      --certificate-authority={{ PKI_DIR }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ k8s_loadbalancer_ip }}:6443 \
      --kubeconfig={{ CONF_DIR }}/{{ item }}.kubeconfig
   
    kubectl config set-credentials system:node:{{ item }} \
      --client-certificate={{ PKI_DIR }}/{{ item }}.pem \
      --client-key={{ PKI_DIR }}/{{ item }}-key.pem \
      --embed-certs=true \
      --kubeconfig={{ CONF_DIR }}/{{ item }}.kubeconfig

    kubectl config set-context default \
      --cluster={{ CLUSTER_NAME }} \
      --user=system:node:{{ item }} \
      --kubeconfig={{ CONF_DIR }}/{{ item }}.kubeconfig 

    kubectl config use-context default --kubeconfig={{ CONF_DIR }}/{{ item }}.kubeconfig
  args:
    creates: '{{ CONF_DIR }}/{{ item }}.kubeconfig'
  loop:
    - k8s-worker1
    - k8s-worker2
    - k8s-worker3

- name: Configure kubeconf file for kube-proxy
  shell: |
    kubectl config set-cluster {{ CLUSTER_NAME }} \
      --certificate-authority={{ PKI_DIR }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ k8s_loadbalancer_ip }}:6443 \
      --kubeconfig={{ CONF_DIR }}/kube-proxy.kubeconfig

    kubectl config set-credentials kube-proxy \
      --client-certificate={{ PKI_DIR }}/kube-proxy.pem \
      --client-key={{ PKI_DIR }}/kube-proxy-key.pem \
      --embed-certs=true \
      --kubeconfig={{ CONF_DIR }}/kube-proxy.kubeconfig

    kubectl config set-context default \
      --cluster={{ CLUSTER_NAME }} \
      --user=kube-proxy \
      --kubeconfig={{ CONF_DIR }}/kube-proxy.kubeconfig

    kubectl config use-context default --kubeconfig={{ CONF_DIR }}/kube-proxy.kubeconfig
  args:
    creates: '{{ CONF_DIR }}/kube-proxy.kubeconfig'

- name: Configure kubeconf file for kube-controller-manager
  shell: |
    kubectl config set-cluster {{ CLUSTER_NAME }} \
      --certificate-authority={{ PKI_DIR }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ k8s_loadbalancer_ip }}:6443 \
      --kubeconfig={{ CONF_DIR }}/kube-controller-manager.kubeconfig

    kubectl config set-credentials kube-controller-manager-proxy \
      --client-certificate={{ PKI_DIR }}/kube-controller-manager.pem \
      --client-key={{ PKI_DIR }}/kube-controller-manager-key.pem \
      --embed-certs=true \
      --kubeconfig={{ CONF_DIR }}/kube-controller-manager.kubeconfig

    kubectl config set-context default \
      --cluster={{ CLUSTER_NAME }} \
      --user=kube-controller-manager \
      --kubeconfig={{ CONF_DIR }}/kube-controller-manager.kubeconfig

    kubectl config use-context default --kubeconfig={{ CONF_DIR }}/kube-controller-manager.kubeconfig
  args:
    creates: '{{ CONF_DIR }}/kube-controller-manager.kubeconfig'

- name: Configure kubeconf file for kube-scheduler
  shell: |
    kubectl config set-cluster {{ CLUSTER_NAME }} \
      --certificate-authority={{ PKI_DIR }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ k8s_loadbalancer_ip }}:6443 \
      --kubeconfig={{ CONF_DIR }}/kube-scheduler.kubeconfig

    kubectl config set-credentials kube-scheduler \
      --client-certificate={{ PKI_DIR }}/kube-scheduler.pem \
      --client-key={{ PKI_DIR }}/kube-scheduler-key.pem \
      --embed-certs=true \
      --kubeconfig={{ CONF_DIR }}/kube-scheduler.kubeconfig

    kubectl config set-context default \
      --cluster={{ CLUSTER_NAME }} \
      --user=kube-scheduler \
      --kubeconfig={{ CONF_DIR }}/kube-scheduler.kubeconfig

    kubectl config use-context default --kubeconfig={{ CONF_DIR }}/kube-scheduler.kubeconfig
  args:
    creates: '{{ CONF_DIR }}/kube-scheduler.kubeconfig'

- name: Configure kubeconf file for admin user
  shell: |
    kubectl config set-cluster {{ CLUSTER_NAME }} \
      --certificate-authority={{ PKI_DIR }}/ca.pem \
      --embed-certs=true \
      --server=https://{{ k8s_loadbalancer_ip }}:6443 \
      --kubeconfig={{ CONF_DIR }}/admin.kubeconfig

    kubectl config set-credentials admin \
      --client-certificate={{ PKI_DIR }}/admin.pem \
      --client-key={{ PKI_DIR }}/admin-key.pem \
      --embed-certs=true \
      --kubeconfig={{ CONF_DIR }}/admin.kubeconfig

    kubectl config set-context default \
      --cluster={{ CLUSTER_NAME }} \
      --user=admin \
      --kubeconfig={{ CONF_DIR }}/admin.kubeconfig

    kubectl config use-context default --kubeconfig={{ CONF_DIR }}/admin.kubeconfig
  args:
    creates: '{{ CONF_DIR }}/admin.kubeconfig'

